<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="paul.dao.UserDao">
    <resultMap id="BaseResultMap" type="paul.domain.User">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" property="name"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="createDate" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="role" jdbcType="VARCHAR" property="role"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        id, name,username, password, status, createDate, role
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from user_inf
        where id = #{id,jdbcType=INTEGER}
    </select>

    <!--分页动态查询-->
    <select id="selectWithParam" resultType="paul.domain.User">
        select * from user_inf
        <where>
            <if test="user!=null and user.username!=null">
                username like concat('%',#{user.username},'%')
            </if>
            <if test="user!=null and user.status!=null">
                and status like concat('%',#{user.status},'%')
            </if>

        </where>
        <if test="pageModel!=null">
            limit #{pageModel.firstLimitParam},#{pageModel.pageSize}
        </if>

    </select>

    <!--动态查询总数量-->
    <select id="selectCount" resultType="int">
        select COUNT(*) FROM user_inf
        <where>
            <if test="username!=null">
                username like concat('%',#{user.username},'%')
            </if>
            <if test="status!=null">
                AND status like concat('%',#{user.status},'%')
            </if>
        </where>
    </select>
    <delete id="deleteById" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from user_inf
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="paul.domain.User">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into user_inf (id, username, password,
        status, role
        )
        values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
        #{status,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="paul.domain.User">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into user_inf
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createDate != null">
                createDate,
            </if>
            <if test="role != null">
                role,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="role != null">
                #{role,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="paul.domain.User">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update user_inf
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                createDate = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="role != null">
                role = #{role,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="paul.domain.User">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update user_inf
        set username = #{username,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        status = #{status,jdbcType=VARCHAR},
        role = #{role,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>